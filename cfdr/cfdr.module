<?php
/**
 * @file Main module file
 */

/**
 * Implementation of hook_menu().
 */
function cfdr_menu() {
  $menu = array();
  $menu['cfdr'] = array(
    'title' => 'View CFDs',
    'description' => 'View all CFDs',
    'access callback' => 'user_access',
    'access arguments' => array('view any FEs'),
    'page callback' => 'cfdr_view_cfds',
    // 'page arguments' => array('cfdr_view_cfds'),
  );
  $menu['cfdr/%/pdf'] = array(
    'type' => MENU_CALLBACK,
    'title' => 'Download',
    'access callback' => 'user_access',
    'access arguments' => array('view any FEs'),
    'page callback' => 'cfdr_download_pdf',
    'page arguments' => array(1),
  );
  $menu['cfdr/%/xml'] = array(
    'type' => MENU_CALLBACK,
    'title' => 'Download',
    'access callback' => 'user_access',
    'access arguments' => array('view any FEs'),
    'page callback' => 'cfdr_download_xml',
    'page arguments' => array(1),
  );
  $menu['cfdr/%cfdr'] = array(
    'type' => MENU_CALLBACK,
    'title' => 'View CFD',
    'access callback' => 'user_access',
    'access arguments' => array('view any FEs'),
    'page callback' => 'cfdr_view_html',
    'page arguments' => array(1),
  );
  //Admin menu
  $menu['admin/settings/cfdr'] = array(
    'title' => 'CFD - Received Settings',
    'description' => 'Configure CFD - Received options',
    'access callback' => 'user_access',
    'access arguments' => array('administer cfdr'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('cfdr_admin_form'),
    'file' => './cfdr.admin.inc',
  );
  return $menu;
}

/**
 * Implementation of hook_theme()
 **/
function cfdr_theme() {
  return array(
    // may be removed
    'cfdr_view_cfds' => array(
      'arguments' => array('form' => NULL),
    ),
    'cfdr_filters_fieldset' => array(
      'arguments' => array('form' => NULL),
    ),
  );
}

/**
 * Implementation of hook_perm().
 */
function cfdr_perm() {
  return array('administer cfdr', 'view any CFD');
}

/**
 * Saves a fully loaded cfdr object to {cfdr}
 **/
function cfdr_save(&$cfdr) {
  drupal_write_record('cfdr', $cfdr);
}

/**
 * Loads then inserts a CFD into de database.
 * @param string $cfdr_filename the full path and name of the CFD's .xml file
 **/
function cfdr_insert($filename) {
  //parse XML file read (with xml DOM(simpleXML sucks at namespaces))
  $doc = new DOMDocument();
  @$doc->load($filename, LIBXML_NOWARNING);
  $xpath = new DOMXPath($doc);
  $xpath->registerNamespace('cfd', 'http://www.sat.gob.mx/cfd/2');
  $serie = $xpath->query('/cfd:Comprobante/@serie');
  $folio = $xpath->query('/cfd:Comprobante/@folio');
  $receptor_rfc = $xpath->query('/cfd:Comprobante/cfd:Receptor/@rfc');
  $emisor_rfc = $xpath->query('/cfd:Comprobante/cfd:Emisor/@rfc');
  $emisor_nombre = $xpath->query('/cfd:Comprobante/cfd:Emisor/@nombre');
  $fecha_cfd = $xpath->query('/cfd:Comprobante/@fecha');
  $importe = $xpath->query('/cfd:Comprobante/@total');

  $cfdr = new stdClass();
  $cfdr->serie = $serie->item(0)->value;
  $cfdr->folio = $folio->item(0)->value;
  $cfdr->receptor_rfc = $receptor_rfc->item(0)->value;
  $cfdr->emisor_rfc = $emisor_rfc->item(0)->value;
  $cfdr->emisor_nombre = $emisor_nombre->item(0)->value;
  $cfdr->fecha_cfd = $fecha_cfd->item(0)->value;
  $cfdr->importe = $importe->item(0)->value;
  $cfdr->xml_filename = $filename;

  cfdr_save($cfdr);
}

/**
 * Loads a cfdr object and returns it
 * @param int $cfdr_id Id of the CFD to retreive
 * @return stdObject a loaded node-like object.
 */
function cfdr_load($cfdr_id) {
  return db_fetch_object(db_query('SELECT * FROM {cfdr} WHERE cfdr_id = %d', $cfdr_id));
}

/**
 * Returns the filename of a CFD
 * @param int $cfdr_id Id of the CFD to retreive
 */
function cfdr_load_filename($cfdr_id) {
  return db_result(db_query('SELECT xml_filename FROM {cfdr} WHERE cfdr_id = %d', $cfdr_id));
}

function theme_cfdr_view_cfds($form) {
  //based on theme_node_admin_nodes() in core - node.admin.inc
  // If there are rows in this form, then $form['title'] contains a list of
  // the title form elements.
  $has_posts = isset($form['list']['serie']) && is_array($form['list']['serie']);
  $header = array('Serie', 'Folio', t('Emisor'), t('Date'), t('Receptor'), '$', t('Download'));

  $output = '';

  $output .= drupal_render($form['date_filter']);
  if ($has_posts) {
    foreach (element_children($form['list']['serie']) as $key) {
      $row = array();
      $row[] = drupal_render($form['list']['serie'][$key]);
      $row[] = drupal_render($form['list']['folio'][$key]);
      $row[] = drupal_render($form['list']['emisor_rfc'][$key]);
      $row[] = drupal_render($form['list']['date'][$key]);
      $row[] = drupal_render($form['list']['receptor_rfc'][$key]);
      $row[] = drupal_render($form['list']['importe'][$key]);
      $row[] = drupal_render($form['list']['links'][$key]);
      $rows[] = $row;
    }
  }
  else {
    $rows[] = array(array('data' => t('No CFDs available.'), 'colspan' => '7'));
  }

  $output .= theme('table', $header, $rows);
  if ($form['pager']['#value']) {
    $output .= drupal_render($form['pager']);
  }

  $output .= drupal_render($form);

  return $output;
}

/**
 * 'cfdr' menu entry callback
 **/
function cfdr_view_cfds() {
  $header = array(
    array('data' => 'Serie', 'field' => 'serie'),
    array('data' => 'Folio', 'field' => 'folio'),
    array('data' => t('Emisor'), 'field' => 'emisor_rfc'),
    array('data' => t('Date'), 'field' => 'fecha_cfd', 'sort' => 'desc'),
    array('data' => t('Receptor'), 'field' => 'receptor_rfc'),
    array('data' => '$', 'field' => 'importe'),
    t('Download'),
  );
  $query = 'SELECT * FROM {cfdr}';
  $filters = $_SESSION['cfdr_filters'];
  if (isset($filters)) {
    $join .= ' WHERE (';
    foreach ($filters as $filter => $value) {
      if ($join == ' OR ') $join = ') AND (';
      switch ($filter) {
        default:
          foreach ($value as $k => $v) {
            if ($v == NULL)
              $query .= $join . $filter . " IS NULL";
            else
              $query .= $join . $filter . " = '$v'";

            if ($join != ' OR ') $join = ' OR ';
          }
          break;
        case 'fecha_cfd':
          $query .= $join . "fecha_cfd >= '" . $value['start'] . "' AND fecha_cfd <= '" . $value['end'] . "'";
          if ($join == ' WHERE (') $join = ') AND (';
          break;
        case 'emisor_nombre':
          $query .= $join . $filter . " LIKE '%%$value%%'";
          if ($join == ' WHERE (') $join = ') AND (';
          break;
      }
    }
    $query .= ')';
  }
  $results = pager_query($query . tablesort_sql($header), 30);
  // drupal_set_message($query . tablesort_sql($header), 'status', FALSE);
  while ($cfd = db_fetch_object($results)) {
    $basename = basename($cfd->xml_filename);
    $name = substr($basename, 0, strrpos($basename, '.'));
    $rows[] = array(
      array('data' => $cfd->serie),
      array('data' => $cfd->folio),
      array('data' => $cfd->emisor_nombre),
      array('data' => date_format_date(date_make_date($cfd->fecha_cfd), 'short')),
      array('data' => $cfd->receptor_rfc),
      array('data' => $cfd->importe),
      array('data' => cfdr_get_dl_links($name, $cfd->cfdr_id)),
    );
  }
  if (empty($rows))
    $rows[] = array(array('data' => t('No CFDs available.'), 'colspan' => '7'));

  return drupal_get_form('cfdr_filters_form') . theme('table', $header, $rows) . theme('pager', NULL, 30, 0);
}

/**
 * filter form for 'cfdr' menu entry callback
 **/
function cfdr_filters_form() {
  $form['filters'] = array(
    '#type' => 'fieldset',
    '#title' => t('Filter'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
  );
  $form['filters']['serie'] = array(
    '#type' => 'select',
    '#title' => 'Serie',
    '#default_value' => @array_keys($_SESSION['cfdr_filters']['serie']),
    '#options' => _cfdr_get_select('serie'),
    '#multiple' => TRUE,
  );
  $form['filters']['emisor_nombre'] = array(
    '#type' => 'textfield',
    '#title' => 'Nombre emisor',
    '#size' => 50,
    '#maxlength' => 255,
    '#default_value' => $_SESSION['cfdr_filters']['emisor_nombre']
  );
  // RFCs
  // $form['filters']['emisor_rfc'] = array(
  //   '#type' => 'select',
  //   '#title' => 'RFC Emisor',
  //   '#default_value' =>  @array_keys($_SESSION['cfdr_filters']['emisor_rfc']),
  //   '#options' => _cfdr_get_select('emisor_rfc'),
  //   '#multiple' => TRUE,
  // );
  $form['filters']['receptor_rfc'] = array(
    '#type' => 'select',
    '#title' => 'RFC Receptor',
    '#default_value' =>  @array_keys($_SESSION['cfdr_filters']['receptor_rfc']),
    '#options' => _cfdr_get_select('receptor_rfc'),
    '#multiple' => TRUE,
  );
  // Date filter
  $form['filters']['fecha_cfd']['start'] = array(
    '#type' => 'textfield',
    '#title' => t('Start date'),
    '#size' => 10,
    '#maxlength' => 10,
    '#description' => t('Format: yyyy-mm-dd'),
    '#default_value' => substr($_SESSION['cfdr_filters']['fecha_cfd']['start'], 0, 10),
  );
  $form['filters']['fecha_cfd']['end'] = array(
    '#type' => 'textfield',
    '#title' => t('End date'),
    '#size' => 10,
    '#maxlength' => 10,
    '#description' => t('Format: yyyy-mm-dd'),
    '#default_value' => substr($_SESSION['cfdr_filters']['fecha_cfd']['end'], 0, 10),
  );
  // Buttons
  $form['filters']['filter'] = array(
    '#type' => 'submit',
    '#value' => t('Filter'),
  );
  $form['filters']['reset'] = array(
    '#type' => 'submit',
    '#value' => t('Reset'),
  );
  $form['filters']['#theme'] = 'cfdr_filters_fieldset';
  // $form['#redirect'] = 'cfdr';
  $form['#validate'][] = 'cfdr_filters_form_validate';
  $form['#submit'][] = 'cfdr_filters_form_submit';
  return $form;
}

/**
 *
 **/
function cfdr_filters_form_submit($form, &$form_state) {
  unset($_SESSION['cfdr_filters']);
  if ($form_state['values']['op'] == t('Reset')) {
    return;
  }
  $filters = &$_SESSION['cfdr_filters'];
  $values = $form_state['values'];
  // dpm($form);

  // foreach ($values['emisor_rfc'] as $key)
  //   $filters['emisor_rfc'][$key] = $form['filters']['emisor_rfc']['#options'][$key];

  foreach ($values['serie'] as $key)
    $filters['serie'][$key] = $form['filters']['serie']['#options'][$key];

  foreach ($values['receptor_rfc'] as $key)
    $filters['receptor_rfc'][$key] = $form['filters']['receptor_rfc']['#options'][$key];

  if ($values['start']) {
    $start = date_make_date($values['start']);
    $filters['fecha_cfd']['start'] = date_format($start, DATE_FORMAT_ISO);
  }
  if ($values['end']) {
    // 86399 seconds = one day - 1 second
    $end = date_make_date(date_format(date_make_date($values['end']), DATE_FORMAT_UNIX) + 86399, NULL, DATE_UNIX);
    $filters['fecha_cfd']['end'] = date_format($end, DATE_FORMAT_ISO);
  }
  if ($values['emisor_nombre']) {
    $filters['emisor_nombre'] = $values['emisor_nombre'];
  }
}

/**
 * undocumented function
 *
 **/
function _cfdr_get_select($field) {
  $results = db_query('SELECT ' . $field . ' FROM {cfdr} GROUP BY ' . $field);
  $options = array();
  while ($result = db_fetch_object($results)) {
    $options[] = $result->$field;
  }
  return $options;
}

/**
 * Theme for for cfdr_filter_form()
 **/
function theme_cfdr_filters_fieldset($form) {
  $output = '';
  $output .= drupal_render($form['emisor_nombre']);
  $output .= '<div style="display: table-row;">';
    $output .= '<div style="display: table-cell; padding-right: 15px">' . drupal_render($form['serie']) . '</div>';
    // $output .= '<div style="display: table-cell; padding-right: 15px">' . drupal_render($form['emisor_rfc']) . '</div>';
    $output .= '<div style="display: table-cell;">' . drupal_render($form['receptor_rfc']) . '</div>';
  $output .= '</div><div style="display: table-row;">';
    $output .= '<div style="display: table-cell; padding-right: 15px">' . drupal_render($form['fecha_cfd']['start']) . '</div>';
    $output .= '<div style="display: table-cell;">' . drupal_render($form['fecha_cfd']['end']) . '</div>';
  $output .= '</div>';
  $output .= drupal_render($form['filter']) . drupal_render($form['reset']);
  return $output;
}

/**
 * Returns the xml file of the cfd node for download.
 * @param StdObject $node
 */
function cfdr_download_xml($cfdr_id) {
 $filename = cfdr_load_filename($cfdr_id);
 $basename = basename($filename);
 $headers = array(
   'Content-Description: File Transfer',
   "Content-Disposition: attachment; filename=$basename",
   'Content-type: text/xml',
 );
 // Code based on file_transfer() but modified to serve files outside the
 // drupal file system
 if (ob_get_level()) {
   ob_end_clean();
 }

 foreach ($headers as $header) {
   // To prevent HTTP header injection, we delete new lines that are
   // not followed by a space or a tab.
   // See http://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.2
   $header = preg_replace('/\r?\n(?!\t| )/', '', $header);
   drupal_set_header($header);
 }

 // Transfer file in 1024 byte chunks to save memory usage.
 if ($fd = fopen($filename, 'rb')) {
   while (!feof($fd)) {
     print fread($fd, 1024);
   }
   fclose($fd);
 }
 else {
   drupal_not_found();
 }
 exit();
}

/**
 * Gets the out of the node and gets the PDF from cfd_make_pdf() then
 * sends it to the browser.
 * @param StdObject $node
 */
function cfdr_download_pdf($cfdr_id) {
  //generate PDF
  $pdf = cfd_make_pdf(cfdr_load_filename($cfdr_id));
  //send generated file to browser
  // $pdf->SetTitle($node->title);
  // $pdf->SetDisplayMode('fullpage');
  // $pdf->Output("$node->title.pdf");
  $pdf->Output();
}

/**
 * returns the links string to download this cfd node as xml or pdf by using l()
 * @return String link
 */
function cfdr_get_dl_links($name, $cfrd_id) {
  // add $node_title.pdf to PDF dl path so Adobe Reader gets that as a filename
  return  l('PDF', "cfdr/$cfrd_id/pdf/$name.pdf") . ' | ' . l('XML', "cfdr/$cfrd_id/xml");
}

/*
 * Implementation of hook_cron().
 */
function cfdr_cron() {
  cfdr_scan();
}

/**
 * Scans for .xml cfds in configured directory and moves XML CFDs to another dir
 **/
function cfdr_scan() {
  $scan_path = variable_get('cfdr_scan_path', 'sites/default/cfd/new');
  $move_path = variable_get('cfdr_move_path', 'sites/default/cfd');
  if ($files = file_scan_directory($scan_path, '.xml|.XML$', array('.', '..', 'CVS'), 0, TRUE)) {
    $count = 0;
    foreach ($files as $file) {
      if ($count > 100) break;
      $new_filename = $move_path . '/' . $file->basename;
      // move to $move_path
      if (rename($file->filename, $new_filename)) {
        // add entry to {cfdr} form .xml file
        cfdr_insert($new_filename);
        $count++;
      }
    }
  }
  if ($count > 0)
    watchdog('cfdr', '@count files imported succesfully', array('@count' => $count), WATCHDOG_NOTICE);
}
